#!/bin/bash
# SCRIPT TO NOTIFY USERS THAT THEIR ACCOUNT IS EXPIRING WITHIN THE NEXT 31 DAYS
# RAN ON THE FIRST AND 16TH OF THE MONTH
# FULLY WRITTEN BY DAANISH H FIAZ 
BUFFER_DURATION=31 # in days

get_password_expiry_from_shadow() {
    local account=$1
    local expiry_date=`grep "${account}:" /etc/shadow | awk -F':' '{ if ($8 == "") expiry_date = "never"; else expiry_date = strftime("%Y-%m-%d", ($8 * 86400 + 86400)); print expiry_date }'`
    echo "$expiry_date"
}

get_sponsor_email() {
    local account=$1
    local sponsor_path="/usr/local/etc/sponsors/$account"
    if [[ $sponsor_email == *"<"* ]]; then
        #echo "sponsor field has less than!"
        local sponsor_email=$(cat /usr/local/etc/sponsors/$account | grep -oP '(?<=<)[^>]+')
    fi

    if [[ $sponsor_email == *"["* ]]; then
        #echo "sponsor field has open bracket!"
        local sponsor_email=$(cat /usr/local/etc/sponsors/$account | grep -oP '(?<=\[)[^\]]+')
    fi

    #local sponsor_email=$(grep -oP '<\K[^>]+' "$sponsor_path" 2>/dev/null)
    echo "$sponsor_email"
}

is_going_to_expire() {
    local chage_date=$1
    local expiry_date=$(date -d "$chage_date" "+%s")
    local today=$(date "+%s")
    local diff_days=$(( ($expiry_date - $today) / (60*60*24) ))
    if [ $diff_days -le $BUFFER_DURATION ]; then
        return 0
    else
        return 1
    fi
}

extract_email_from_forward_file() {
    local username=$1
    local forward_file_path="<HOME_DIR>/$username/.forward"
    if [ -f "$forward_file_path" ]; then
        local email=$(head -n 1 "$forward_file_path" | awk '{print $1}')
        if [[ "$email" == *@* ]]; then
            echo "$email"
        fi
    fi
}

check_hostname() {
    local expected_hostname=$1
    local curr_hostname=$(hostname)
    if [ "$curr_hostname" != "$expected_hostname" ]; then
        exit 1
    else
        main
        exit 0
    fi
}

convert_date_format() {
    local input_date=$1
    local formatted_date=$(date -d "$input_date" "+%B %d, %Y")
    echo "$formatted_date" #return formatted date
}

send_email() {
    local recipient="$1"
    local username="$2"
    local sponsor_email="$3"
    local expiry_date="$4"
    /usr/sbin/sendmail -t<<EOM
To: $recipient
CC: $sponsor_email
BCC: it-hpc@lists.wm.edu
From: hpc-help@lists.wm.edu
Subject: HPC Account Expiration
Your W&M HPC account ($username) is due to expire on $expiry_date.

If you require continued access, please submit a renewal request:

<RENEWAL REQUEST WEBSITE>

If you do not plan to renew your account, please retrieve any files which you wish to preserve before your account expires. All files associated with your account become SUBJECT TO DELETION after your account has been expired for one month.

Note: If you have requested an account renewal within the last few days, then you do not need to submit another one. You will be notified when your renewal request has been processed.

EOM
}

main() {
    sender_email="" # it hpc email
    receiver_email="" # user_email
    cc_email="" # sponsor_email
    subject="HPC Account Expiration"
    smtp_server="<SMTP SERVER IP"
    smtp_port=<SMTP PORT>

    accounts=$(awk -F: '{print $1}' /etc/passwd | sort)
    for account in $accounts; do
        if [ -d "<HOME DIR>/$user" ]; then
            chage_date=$(get_password_expiry_from_shadow "$account")
            if [[ $chage_date != *"never"* ]]; then
                user_email=$(extract_email_from_forward_file "$account")
                cc_email=$(get_sponsor_email "$account")
                #echo $account $chage_date
                # if that date is within the next 31 days
                curr_date=$(date +%Y-%m-%d)
                future_date=$(date -d "+31 days" +%Y-%m-%d)
                if [[ "$chage_date" > "$curr_date" && "$chage_date" < "$future_date" ]]; then
                    cv_date=$(convert_date_format "$chage_date")
                    #echo $cv_date
                    # check to filter out bad sponsor emails
                    if [[ "$cc_email" == "undefined@und" ]]; then
                        cc_email=""
                    fi
                    if [[ ! "$cc_email" == *"@"* ]]; then
                        cc_email=""
                    fi
                    #echo "The date $chage_date for user $account is within the next 31 days. CC email is $cc_email"
                    send_email "$user_email" "$account" "$cc_email" "$cv_date"
                fi
            fi
        fi
    done
}

# Main
check_hostname "<hostname>"
